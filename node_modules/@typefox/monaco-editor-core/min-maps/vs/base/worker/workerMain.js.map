{"version":3,"sources":["vs/base/worker/fake","vs/base/worker/vs/loader.js","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/diff/diffChange.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/diff/diff.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/errors.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/arrays.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/functional.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/iterator.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/keyCodes.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/lifecycle.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/linkedList.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/event.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/cancellation.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/platform.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/strings.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/types.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/uri.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/worker/simpleWorker.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/position.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/range.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/selection.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/token.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/uint.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/characterClassifier.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/diff/diffComputer.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/model/wordHelper.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/modes/linkComputer.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/modes/supports/inplaceReplaceSupport.ts","vs/base/worker/vs/editor/common/standalone/promise-polyfill/polyfill.js","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/standalone/standaloneEnums.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/standalone/standaloneBase.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/model/mirrorTextModel.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/services/editorSimpleWorker.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/worker/workerMain.ts"],"names":["__m","__M","deps","result","i","len","length","_amdLoaderGlobal","this","_commonjsGlobal","global","AMDLoader","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","Array","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ensureError","err","Error","message","String","stack","ConfigurationOptionsUtil","validateConfigurationOptions","options","defaultOnError","phase","console","error","moduleId","neededBy","baseUrl","isBuild","paths","config","catchError","recordStats","urlArgs","onError","ignoreDuplicateModules","cspNonce","nodeModules","nodeCachedData","seed","writeDelay","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","NodeScriptLoader","BrowserScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","document","createElement","setAttribute","getConfig","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_init","_fs","_vm","_path","_crypto","_initNodeRequire","that","Module","_compile","content","hashData","scriptSource","wrap","recorder","getRecorder","cachedDataPath","_getCachedDataPath","data","readFileSync","slice","cachedData","_e","Script","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_handleCachedData","_verifyCachedData","opts","nodeInstrumenter","c","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","normalizedScriptSrc_1","normalize","vmScriptPathOrUri_1","_getElectronRendererScriptPathOrUri","wantsCachedData_1","Boolean","cachedDataPath_1","_readSourceAndCachedData","charCodeAt","_BOM","_PREFIX","_SUFFIX","scriptOpts","_createAndEvalScript","contents","ret","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","isElectronRenderer","driveLetterMatch","match","toUpperCase","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","unlink","_createAndWriteCachedData","timeout","ceil","random","lastSize","iteration","createLoop","setTimeout","writeFile","pow","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","readFile","encoding","hashDataNow","equals","warn","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","r","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","_err","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","define","init","_nodeRequire_1","what","RequireFunc","DefineFunc","jQuery","_requireFunc_config","doNotInitLoader","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","pos","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","diffChange_1","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","changes","ComputeDiffRecursive","PrettifyChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","maxDifferences","numDiagonals","tempOriginalIndex","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","index","element","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diagonalsAbove","diffEven","isPromiseCanceledError","name","canceledName","ErrorHandler","listeners","unexpectedErrorHandler","addListener","listener","_removeListener","emit","forEach","setUnexpectedErrorHandler","newUnexpectedErrorHandler","getUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","errorHandler","transformErrorForSerialization","$isError","stacktrace","canceled","illegalArgument","illegalState","readonly","disposed","getErrorMessage","findFirstInSorted","array","p","low","high","mid","floor","mergeSort","compare","_sort","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","pop","firstIndex","fn","tail","tail2","arr","one","other","itemEquals","binarySearch","comparator","comp","groupBy","currentGroup","removed","added","splices_1","top","topAsync","batch","token","Promise","reject","__awaiter","o","sent","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","isNonEmptyArray","distinct","keyFn","position","seen","elem","distinctES6","Set","has","add","uniqueFilter","lastIndex","first","notFoundValue","commonPrefixLength","flatten","range","arg","fill","num","indexer","merger","t","reduce","insert","arrayInsert","target","insertIndex","insertArr","shuffle","_seed","rand","seed_1","x","sin","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","asArray","once","didCall","FIN","done","Iterator","_empty","next","empty","single","fromArray","elements","iterator","collect","atMost","POSITIVE_INFINITY","iterators","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","_super","__extends","previous","last","parent","MappedIterator","MappedNavigator","createSimpleKeybinding","keybinding","OS","ctrlCmd","winCtrl","SimpleKeybinding","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","createKeybinding","chordPart","ChordKeybinding","ctrlKey","shiftKey","altKey","metaKey","getHashCode","isModifierKey","toChord","isDuplicateModifierCase","parts","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","markTracked","TRACK_DISPOSABLES","Disposable","None","__is_disposable_tracked__","trackDisposable","log","dispose","disposables","d","isDisposable","thing","combinedDisposable","toDisposable","self","DisposableStore","_toDispose","_isDisposed","clear","item","_store","_register","freeze","MutableDisposable","_value","UnownedDisposable","_hasBeenAcquired","acquire","ReferenceCollection","references","reference","counter","object","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","iterator_1","toArray","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","onFirstListenerAdd","fire","onLastListenerRemove","latch","firstCall","shouldEmit","lifecycle_1","signal","any","events","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","onFirstListenerDidAdd","ChainableEvent","on","chain","fromNodeEventEmitter","eventName","removeListener","fromDOMEventEmitter","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","_warnCountdown","_stacks","check","listenerCount","threshold","count","topStack_1","topCount_1","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","remove","onListenerDidAdd","removeMonitor","size","_noop","_deliveryQueue","iter","event_1","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","pause","resume","AsyncEmitter","fireAsync","eventFn","_asyncDeliveryQueue","thenables","event_2","all","_b","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","wrapEvent","bufferEvents","Relay","listening","inputEvent","inputEventListener","CancellationToken","shortcutEvent","context","bind","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","_parentListener","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","_language","_translationsConfigFile","_userAgent","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","language","PlatformToString","_platform","isMacintosh","isLinux","isNative","isWeb","isRootUser","getuid","Language","isDefaultVariant","isDefault","translationsConfigFile","_globals","globals","_setImmediate","setImmediate","escapeRegExpCharacters","ltrim","needleLen","offset","rtrim","haystackLen","isLowerAsciiLetter","code","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","fromCharCode","substrEquals","aStart","aEnd","bStart","bEnd","isFullWidthCharacter","charCode","startsWithUTF8BOM","isFalsyOrWhitespace","trim","pad","l","char","_formatRegexp","format","group","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","source","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidate","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","isHighSurrogate","isLowSurrogate","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","lcut","text","re","EL","COLOR_START","COLOR_END","removeAnsiEscapeCodes","removeAccents","regex_1","UTF8_BOM_CHARACTER","stripUTF8BOM","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","getNLines","_typeof","number","isString","string","isObject","isUndefined","isUndefinedOrNull","isFunction","function","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","isStringArray","every","isNumber","isBoolean","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","methodNames_1","methodName","withNullAsUndefined","withUndefinedAsNull","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeTable","_makeFsPath","authority","scheme","platform_1","_asFormatted","skipEncoding","encoder","fragment","_slash","userinfo","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","setUriThrowOnMissingScheme","old","_regexp","URI","schemeOrData","_strict","trace","_schemeFix","_referenceResolution","_validateUri","isUri","fsPath","with","_URI","decodeURIComponent","file","components","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","req","_send","vsWorker","handleMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","transfer","ArrayBuffer","SimpleWorkerClient","workerFactory","host","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","requirejs","contexts","hostMethods","types","_onModuleLoaded","stringify","proxyMethodRequest","_request","_lazyProxy","availableMethods","_onError","getProxyObject","info","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","onmessage","initialize","loaderConfig","hostProxy","vs","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","lift","isIPosition","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","position_1","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","range_1","Token","TokenizationResult","tokens","endState","TokenizationResult2","toUint32","v","Uint8Matrix","rows","cols","defaultValue","Uint8Array","_data","row","toUint8","toUint32Array","Uint32Array","CharacterClassifier","_defaultValue","uint_1","_asciiMap","_createAsciiMap","_map","asciiMap","CharacterSet","_actual","computeDiff","modifiedSequence","diff_1","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getStartColumn","getEndLineNumber","getEndColumn","txt","strings","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","USUAL_WORD_SEPARATORS_1","sep","createWordRegExp","ensureValidWordDefinition","wordDefinition","flags","getWordAtText","textOffset","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","computeLinks","model","stateMachine","characterClassifier_1","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","factory","finallyConstructor","reason","noop","TypeError","_state","_handled","_deferreds","doResolve","deferred","_immediateFn","cb","onFulfilled","onRejected","newValue","finale","thisArg","_unhandledRejectionFn","ex","setTimeoutFunc","prom","val","remaining","race","values","globalNS","window","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","MinimapPosition","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","KeyMod","chord","keyCodes_1","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","cancellation_1","standaloneEnums","selection_1","Uri","uri_1","token_1","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","prefixSumValidIndex","Int32Array","getCount","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","midStop","midStart","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","eolLength","linesLength","lineStartValues","prefixSumComputer_1","_setLineText","lineIndex","insertText","insertLines","newLengths","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","wordHelper_1","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","mirrorTextModel_1","EditorSimpleWorker","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","_getModel","_getModels","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","originalUrl","modifiedUrl","ignoreTrimWhitespace","diffComputer_1","identical","_modelsAreIdentical","originalLineCount","computeDirtyDiff","diffComputer","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","arrays_1","_diffLimit","editOffset","newEdit","linkComputer_1","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","wordUntil","wordAt","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","inplaceReplaceSupport_1","loadForeignModule","createData","foreignHostMethods","ctx","fhr","getMirrorModels","foreignModule","fmr","monaco","standaloneBase_1","MonacoEnvironment","monacoBaseUrl","isFirstMessage","beforeReadyMessages","ws","messageHandler","loadCode"],"mappings":"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","file":"workerMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = /** @class */ (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = /** @class */ (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = /** @class */ (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n        return NullLoaderEventRecorder;\n    }());\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = /** @class */ (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object') {\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        Utilities.NEXT_ANONYMOUS_ID = 1;\n        Utilities.PERFORMANCE_NOW_PROBED = false;\n        Utilities.HAS_PERFORMANCE_NOW = false;\n        return Utilities;\n    }());\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    function ensureError(err) {\n        if (err instanceof Error) {\n            return err;\n        }\n        var result = new Error(err.message || String(err) || 'Unknown Error');\n        if (err.stack) {\n            result.stack = err.stack;\n        }\n        return result;\n    }\n    AMDLoader.ensureError = ensureError;\n    ;\n    var ConfigurationOptionsUtil = /** @class */ (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.phase === 'loading') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error(err);\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.phase === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err);\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.recordStats === 'undefined') {\n                options.recordStats = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n                    err.phase = 'configuration';\n                    options.onError(err);\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = /** @class */ (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            if (this.nodeModulesMap[moduleId] === true) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = /** @class */ (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                this._scriptLoader = (this._env.isWebWorker\n                    ? new WorkerScriptLoader()\n                    : this._env.isNode\n                        ? new NodeScriptLoader(this._env)\n                        : new BrowserScriptLoader());\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = /** @class */ (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var script = document.createElement('script');\n            script.setAttribute('async', 'async');\n            script.setAttribute('type', 'text/javascript');\n            this.attachListeners(script, callback, errorback);\n            script.setAttribute('src', scriptSrc);\n            // Propagate CSP nonce to dynamically created script tag.\n            var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n            if (cspNonce) {\n                script.setAttribute('nonce', cspNonce);\n            }\n            document.getElementsByTagName('head')[0].appendChild(script);\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = /** @class */ (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = /** @class */ (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData) {\n                return;\n            }\n            if (this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request) {\n                    return Module._resolveFilename(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang and create wrapper function\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n                // create script\n                var recorder = moduleManager.getRecorder();\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n                var options = { filename: filename };\n                var hashData;\n                try {\n                    var data = that._fs.readFileSync(cachedDataPath);\n                    hashData = data.slice(0, 16);\n                    options.cachedData = data.slice(16);\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                }\n                catch (_e) {\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                }\n                var script = new that._vm.Script(scriptSource, options);\n                var compileWrapper = script.runInThisContext(options);\n                // run script\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                // cached data aftermath\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var scriptSource;\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n                    }\n                    else {\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n                    }\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData);\n                });\n            }\n        };\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\n            var recorder = moduleManager.getRecorder();\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\n            var script = new this._vm.Script(contents, options);\n            var ret = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\n            if (!this._env.isElectronRenderer) {\n                return path;\n            }\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n            if (driveLetterMatch) {\n                // windows\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n            }\n            else {\n                // nix\n                return \"file://\" + path;\n            }\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // cached data got rejected -> delete and re-create\n                this._fs.unlink(cachedDataPath, function (err) {\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n                    if (err) {\n                        moduleManager.getConfig().onError(err);\n                    }\n                });\n            }\n            else if (createCachedData) {\n                // no cached data, but wanted\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n            }\n        };\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n        // -V8_CACHED_DATA is what v8 produces\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\n            var _this = this;\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n            var lastSize = -1;\n            var iteration = 0;\n            var hashData = undefined;\n            var createLoop = function () {\n                setTimeout(function () {\n                    if (!hashData) {\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                    }\n                    var cachedData = script.createCachedData();\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n                        return;\n                    }\n                    lastSize = cachedData.length;\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\n                        createLoop();\n                    });\n                }, timeout * (Math.pow(4, iteration++)));\n            };\n            // with some delay (`timeout`) create cached data\n            // and repeat that (with backoff delay) until the\n            // data seems to be not changing anymore\n            createLoop();\n        };\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\n            if (!cachedDataPath) {\n                // no cached data case\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n            }\n            else {\n                // cached data case: read both files in parallel\n                var source_1 = undefined;\n                var cachedData_1 = undefined;\n                var hashData_1 = undefined;\n                var steps_1 = 2;\n                var step_1 = function (err) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else if (--steps_1 === 0) {\n                        callback(undefined, source_1, cachedData_1, hashData_1);\n                    }\n                };\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\n                    source_1 = data;\n                    step_1(err);\n                });\n                this._fs.readFile(cachedDataPath, function (err, data) {\n                    if (!err && data && data.length > 0) {\n                        hashData_1 = data.slice(0, 16);\n                        cachedData_1 = data.slice(16);\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                    }\n                    else {\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                    }\n                    step_1(); // ignored: cached data is optional\n                });\n            }\n        };\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData) {\n            var _this = this;\n            if (!hashData) {\n                // nothing to do\n                return;\n            }\n            if (script.cachedDataRejected) {\n                // invalid anyways\n                return;\n            }\n            setTimeout(function () {\n                // check source hash - the contract is that file paths change when file content\n                // change (e.g use the commit or version id as cache path). this check is\n                // for violations of this contract.\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                if (!hashData.equals(hashDataNow)) {\n                    console.warn(\"FAILED TO VERIFY CACHED DATA. Deleting '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\");\n                    _this._fs.unlink(cachedDataPath, function (err) { return console.error(\"FAILED to unlink: '\" + cachedDataPath + \"'\", err); });\n                }\n            }, Math.ceil(5000 * (1 + Math.random())));\n        };\n        NodeScriptLoader._BOM = 0xFEFF;\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n        NodeScriptLoader._SUFFIX = '\\n});';\n        return NodeScriptLoader;\n    }());\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = /** @class */ (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\n        return ModuleIdResolver;\n    }());\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = /** @class */ (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.error = null;\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                var err = AMDLoader.ensureError(producedError);\n                err.phase = 'factory';\n                err.moduleId = this.strId;\n                this.error = err;\n                config.onError(err);\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            this._isComplete = true;\n            this.error = err;\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = /** @class */ (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = /** @class */ (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n        return RegularDependency;\n    }());\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = /** @class */ (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = /** @class */ (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack || null;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            if (m.error) {\n                throw m.error;\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            var err = AMDLoader.ensureError(_err);\n            err.phase = 'loading';\n            err.moduleId = strModuleId;\n            err.neededBy = neededBy;\n            return err;\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            if (!this._modules2[moduleId]) {\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\n            }\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                    if (path !== null) {\n                        path.push(fromId);\n                        return path;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        module.exportsPassedIn = true;\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule && dependencyModule.isComplete()) {\n                        if (dependencyModule.error) {\n                            module.onDependencyError(dependencyModule.error);\n                            return;\n                        }\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n                        cyclePath.reverse();\n                        cyclePath.push(dependency.id);\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                        // Break the cycle\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    // record inverse dependency\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                    this._inverseDependencies2[dependency.id].push(module.id);\n                    if (dependency instanceof PluginDependency) {\n                        var plugin = this._modules2[dependency.pluginId];\n                        if (plugin && plugin.isComplete()) {\n                            this._loadPluginDependency(plugin.exports, dependency);\n                            continue;\n                        }\n                        // Record dependency for when the plugin gets loaded\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                        if (!inversePluginDeps) {\n                            inversePluginDeps = [];\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                        }\n                        inversePluginDeps.push(dependency);\n                        this._loadModule(dependency.pluginId);\n                        continue;\n                    }\n                    this._loadModule(dependency.id);\n                }\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        dependenciesValues[i] = module.exports;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        dependenciesValues[i] = {\n                            id: module.strId,\n                            config: function () {\n                                return _this._config.getConfigForModule(module.strId);\n                            }\n                        };\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule) {\n                        dependenciesValues[i] = dependencyModule.exports;\n                        continue;\n                    }\n                    dependenciesValues[i] = null;\n                }\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = function (what) {\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\n                    try {\n                        return _nodeRequire_1(what);\n                    }\n                    finally {\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\n                    }\n                };\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength: number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiffChange } from 'vs/base/common/diff/diffChange';\n\nfunction createStringSequence(a: string): ISequence {\n\treturn {\n\t\tgetLength() { return a.length; },\n\t\tgetElementAtIndex(pos: number) { return a.charCodeAt(pos); }\n\t};\n}\n\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\n\treturn new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n\n\nexport interface ISequence {\n\tgetLength(): number;\n\tgetElementAtIndex(index: number): number | string;\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength: number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex: number, originalSequence: ISequence, matchLengthOfLongest: number): boolean;\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n\n\tpublic static Assert(condition: boolean, message: string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nexport class MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nlet MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n\n\n\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes: DiffChange[];\n\tprivate m_originalStart: number;\n\tprivate m_modifiedStart: number;\n\tprivate m_originalCount: number;\n\tprivate m_modifiedCount: number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Number.MAX_VALUE;\n\t\tthis.m_modifiedStart = Number.MAX_VALUE;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Number.MAX_VALUE;\n\t\tthis.m_modifiedStart = Number.MAX_VALUE;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class in the reverse order\n\t */\n\tpublic getReverseChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate OriginalSequence: ISequence;\n\tprivate ModifiedSequence: ISequence;\n\tprivate ContinueProcessingPredicate: IContinueProcessingPredicate | null;\n\n\tprivate m_forwardHistory: number[][];\n\tprivate m_reverseHistory: number[][];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence: ISequence, newSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\n\t\tthis.OriginalSequence = originalSequence;\n\t\tthis.ModifiedSequence = newSequence;\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\t}\n\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\n\t\treturn (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n\t}\n\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\n\t\treturn (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n\t}\n\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\n\t\treturn (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n\t}\n\n\tpublic ComputeDiff(pretty: boolean): IDiffChange[] {\n\t\treturn this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): DiffChange[] {\n\t\tlet quitEarlyArr = [false];\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n\t\tif (pretty) {\n\t\t\t// We have to clean up the computed diff to be more intuitive\n\t\t\t// but it turns out this cannot be done correctly until the entire set\n\t\t\t// of diffs have been computed\n\t\t\treturn this.PrettifyChanges(changes);\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes: DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tlet midOriginalArr = [0], midModifiedArr = [0];\n\t\tlet result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tlet midOriginal = midOriginalArr[0];\n\t\tlet midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tlet leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We did't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\n\t\tforwardPoints: number[], reversePoints: number[],\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] | null = null, reverseChanges: DiffChange[] | null = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Number.MIN_VALUE;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\t\tlet diagonal: number;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tdiagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tlet lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Number.MAX_VALUE;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tdiagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\n\t\tlet originalIndex = 0, modifiedIndex = 0;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\t\tlet numDifferences: number;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tlet maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tlet numDiagonals = maxDifferences + 1;\n\t\tlet forwardPoints: number[] = new Array<number>(numDiagonals);\n\t\tlet reversePoints: number[] = new Array<number>(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tlet diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tlet diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tlet diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tlet diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tlet delta = diagonalReverseBase - diagonalForwardBase;\n\t\tlet deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tlet diagonal: number, tempOriginalIndex: number;\n\t\tfor (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\ttempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tlet matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quiting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\ttempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp: number[] = new Array<number>(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Array<number>(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Shifts the given changes to provide a more intuitive diff.\n\t * While the first element in a diff matches the first element after the diff,\n\t * we shift the diff down.\n\t *\n\t * @param changes The list of changes to shift\n\t * @returns The shifted changes\n\t */\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\n\n\t\t// Shift all the changes down first\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tconst change = changes[i];\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\twhile (change.originalStart + change.originalLength < originalStop &&\n\t\t\t\tchange.modifiedStart + change.modifiedLength < modifiedStop &&\n\t\t\t\t(!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n\t\t\t\t(!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n\t\t\t\tchange.originalStart++;\n\t\t\t\tchange.modifiedStart++;\n\t\t\t}\n\n\t\t\tlet mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i + 1, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = changes[i];\n\n\t\t\tlet originalStop = 0;\n\t\t\tlet modifiedStop = 0;\n\t\t\tif (i > 0) {\n\t\t\t\tconst prevChange = changes[i - 1];\n\t\t\t\tif (prevChange.originalLength > 0) {\n\t\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\n\t\t\t\t}\n\t\t\t\tif (prevChange.modifiedLength > 0) {\n\t\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\tlet bestDelta = 0;\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n\t\t\tfor (let delta = 1; ; delta++) {\n\t\t\t\tlet originalStart = change.originalStart - delta;\n\t\t\t\tlet modifiedStart = change.modifiedStart - delta;\n\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n\n\t\t\t\tif (score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchange.originalStart -= bestDelta;\n\t\t\tchange.modifiedStart -= bestDelta;\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tprivate _OriginalIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n\t\t\treturn true;\n\t\t}\n\t\tconst element = this.OriginalSequence.getElementAtIndex(index);\n\t\treturn (typeof element === 'string' && /^\\s*$/.test(element));\n\t}\n\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (originalLength > 0) {\n\t\t\tlet originalEnd = originalStart + originalLength;\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _ModifiedIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n\t\t\treturn true;\n\t\t}\n\t\tconst element = this.ModifiedSequence.getElementAtIndex(index);\n\t\treturn (typeof element === 'string' && /^\\s*$/.test(element));\n\t}\n\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (modifiedLength > 0) {\n\t\t\tlet modifiedEnd = modifiedStart + modifiedLength;\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\n\t\tlet originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n\t\tlet modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n\t\treturn (originalScore + modifiedScore);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\n\t\tlet mergedChangeArr: DiffChange[] = [];\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tlet result = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tlet result = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\tlet originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tlet modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tlet diagonalsBelow = diagonalBaseIndex;\n\t\tlet diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tlet diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tlet lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tlet upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tpublic onUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tif (!array) {\n\t\treturn;\n\t}\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function single<T>(value: T): Iterator<T> {\n\t\tlet done = false;\n\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tdone = true;\n\t\t\t\treturn { done: false, value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromArray<T>(array: T[], index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>, atMost: number = Number.POSITIVE_INFINITY): T[] {\n\t\tconst result: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\tlet i = 0;\n\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tresult.push(next.value);\n\n\t\t\tif (++i >= atMost) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\texport function concat<T>(...iterators: Iterator<T>[]): Iterator<T> {\n\t\tlet i = 0;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif (i >= iterators.length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tconst iterator = iterators[i];\n\t\t\t\tconst result = iterator.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\ti++;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: Iterator<T> | T[]): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate items: T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { illegalArgument } from 'vs/base/common/errors';\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\n\tMeta = 57,\n\tContextMenu = 58,\n\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\n\tNumLock = 78,\n\tScrollLock = 79,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\n\tNUMPAD_0 = 93, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1 = 94, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2 = 95, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3 = 96, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4 = 97, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5 = 98, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6 = 99, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7 = 100, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8 = 101, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9 = 102, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY = 103,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD = 104,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR = 105,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT = 106,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL = 107,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE = 108,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\n\tABNT_C1 = 110, // Brazilian (ABNT) Keyboard\n\tABNT_C2 = 111, // Brazilian (ABNT) Keyboard\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tprivate _keyCodeToStr: string[];\n\tprivate _strToKeyCode: { [str: string]: KeyCode; };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n\n\tfunction define(keyCode: KeyCode, uiLabel: string, usUserSettingsLabel: string = uiLabel, generalUserSettingsLabel: string = usUserSettingsLabel): void {\n\t\tuiMap.define(keyCode, uiLabel);\n\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel);\n\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n\t}\n\n\tdefine(KeyCode.Unknown, 'unknown');\n\n\tdefine(KeyCode.Backspace, 'Backspace');\n\tdefine(KeyCode.Tab, 'Tab');\n\tdefine(KeyCode.Enter, 'Enter');\n\tdefine(KeyCode.Shift, 'Shift');\n\tdefine(KeyCode.Ctrl, 'Ctrl');\n\tdefine(KeyCode.Alt, 'Alt');\n\tdefine(KeyCode.PauseBreak, 'PauseBreak');\n\tdefine(KeyCode.CapsLock, 'CapsLock');\n\tdefine(KeyCode.Escape, 'Escape');\n\tdefine(KeyCode.Space, 'Space');\n\tdefine(KeyCode.PageUp, 'PageUp');\n\tdefine(KeyCode.PageDown, 'PageDown');\n\tdefine(KeyCode.End, 'End');\n\tdefine(KeyCode.Home, 'Home');\n\n\tdefine(KeyCode.LeftArrow, 'LeftArrow', 'Left');\n\tdefine(KeyCode.UpArrow, 'UpArrow', 'Up');\n\tdefine(KeyCode.RightArrow, 'RightArrow', 'Right');\n\tdefine(KeyCode.DownArrow, 'DownArrow', 'Down');\n\tdefine(KeyCode.Insert, 'Insert');\n\tdefine(KeyCode.Delete, 'Delete');\n\n\tdefine(KeyCode.KEY_0, '0');\n\tdefine(KeyCode.KEY_1, '1');\n\tdefine(KeyCode.KEY_2, '2');\n\tdefine(KeyCode.KEY_3, '3');\n\tdefine(KeyCode.KEY_4, '4');\n\tdefine(KeyCode.KEY_5, '5');\n\tdefine(KeyCode.KEY_6, '6');\n\tdefine(KeyCode.KEY_7, '7');\n\tdefine(KeyCode.KEY_8, '8');\n\tdefine(KeyCode.KEY_9, '9');\n\n\tdefine(KeyCode.KEY_A, 'A');\n\tdefine(KeyCode.KEY_B, 'B');\n\tdefine(KeyCode.KEY_C, 'C');\n\tdefine(KeyCode.KEY_D, 'D');\n\tdefine(KeyCode.KEY_E, 'E');\n\tdefine(KeyCode.KEY_F, 'F');\n\tdefine(KeyCode.KEY_G, 'G');\n\tdefine(KeyCode.KEY_H, 'H');\n\tdefine(KeyCode.KEY_I, 'I');\n\tdefine(KeyCode.KEY_J, 'J');\n\tdefine(KeyCode.KEY_K, 'K');\n\tdefine(KeyCode.KEY_L, 'L');\n\tdefine(KeyCode.KEY_M, 'M');\n\tdefine(KeyCode.KEY_N, 'N');\n\tdefine(KeyCode.KEY_O, 'O');\n\tdefine(KeyCode.KEY_P, 'P');\n\tdefine(KeyCode.KEY_Q, 'Q');\n\tdefine(KeyCode.KEY_R, 'R');\n\tdefine(KeyCode.KEY_S, 'S');\n\tdefine(KeyCode.KEY_T, 'T');\n\tdefine(KeyCode.KEY_U, 'U');\n\tdefine(KeyCode.KEY_V, 'V');\n\tdefine(KeyCode.KEY_W, 'W');\n\tdefine(KeyCode.KEY_X, 'X');\n\tdefine(KeyCode.KEY_Y, 'Y');\n\tdefine(KeyCode.KEY_Z, 'Z');\n\n\tdefine(KeyCode.Meta, 'Meta');\n\tdefine(KeyCode.ContextMenu, 'ContextMenu');\n\n\tdefine(KeyCode.F1, 'F1');\n\tdefine(KeyCode.F2, 'F2');\n\tdefine(KeyCode.F3, 'F3');\n\tdefine(KeyCode.F4, 'F4');\n\tdefine(KeyCode.F5, 'F5');\n\tdefine(KeyCode.F6, 'F6');\n\tdefine(KeyCode.F7, 'F7');\n\tdefine(KeyCode.F8, 'F8');\n\tdefine(KeyCode.F9, 'F9');\n\tdefine(KeyCode.F10, 'F10');\n\tdefine(KeyCode.F11, 'F11');\n\tdefine(KeyCode.F12, 'F12');\n\tdefine(KeyCode.F13, 'F13');\n\tdefine(KeyCode.F14, 'F14');\n\tdefine(KeyCode.F15, 'F15');\n\tdefine(KeyCode.F16, 'F16');\n\tdefine(KeyCode.F17, 'F17');\n\tdefine(KeyCode.F18, 'F18');\n\tdefine(KeyCode.F19, 'F19');\n\n\tdefine(KeyCode.NumLock, 'NumLock');\n\tdefine(KeyCode.ScrollLock, 'ScrollLock');\n\n\tdefine(KeyCode.US_SEMICOLON, ';', ';', 'OEM_1');\n\tdefine(KeyCode.US_EQUAL, '=', '=', 'OEM_PLUS');\n\tdefine(KeyCode.US_COMMA, ',', ',', 'OEM_COMMA');\n\tdefine(KeyCode.US_MINUS, '-', '-', 'OEM_MINUS');\n\tdefine(KeyCode.US_DOT, '.', '.', 'OEM_PERIOD');\n\tdefine(KeyCode.US_SLASH, '/', '/', 'OEM_2');\n\tdefine(KeyCode.US_BACKTICK, '`', '`', 'OEM_3');\n\tdefine(KeyCode.ABNT_C1, 'ABNT_C1');\n\tdefine(KeyCode.ABNT_C2, 'ABNT_C2');\n\tdefine(KeyCode.US_OPEN_SQUARE_BRACKET, '[', '[', 'OEM_4');\n\tdefine(KeyCode.US_BACKSLASH, '\\\\', '\\\\', 'OEM_5');\n\tdefine(KeyCode.US_CLOSE_SQUARE_BRACKET, ']', ']', 'OEM_6');\n\tdefine(KeyCode.US_QUOTE, '\\'', '\\'', 'OEM_7');\n\tdefine(KeyCode.OEM_8, 'OEM_8');\n\tdefine(KeyCode.OEM_102, 'OEM_102');\n\n\tdefine(KeyCode.NUMPAD_0, 'NumPad0');\n\tdefine(KeyCode.NUMPAD_1, 'NumPad1');\n\tdefine(KeyCode.NUMPAD_2, 'NumPad2');\n\tdefine(KeyCode.NUMPAD_3, 'NumPad3');\n\tdefine(KeyCode.NUMPAD_4, 'NumPad4');\n\tdefine(KeyCode.NUMPAD_5, 'NumPad5');\n\tdefine(KeyCode.NUMPAD_6, 'NumPad6');\n\tdefine(KeyCode.NUMPAD_7, 'NumPad7');\n\tdefine(KeyCode.NUMPAD_8, 'NumPad8');\n\tdefine(KeyCode.NUMPAD_9, 'NumPad9');\n\n\tdefine(KeyCode.NUMPAD_MULTIPLY, 'NumPad_Multiply');\n\tdefine(KeyCode.NUMPAD_ADD, 'NumPad_Add');\n\tdefine(KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator');\n\tdefine(KeyCode.NUMPAD_SUBTRACT, 'NumPad_Subtract');\n\tdefine(KeyCode.NUMPAD_DECIMAL, 'NumPad_Decimal');\n\tdefine(KeyCode.NUMPAD_DIVIDE, 'NumPad_Divide');\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n}\n\n/**\n * Binary encoding strategy:\n * ```\n *    1111 11\n *    5432 1098 7654 3210\n *    ---- CSAW KKKK KKKK\n *  C = bit 11 = ctrlCmd flag\n *  S = bit 10 = shift flag\n *  A = bit 9 = alt flag\n *  W = bit 8 = winCtrl flag\n *  K = bits 0-7 = key code\n * ```\n */\nconst enum BinaryKeybindingsMask {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n\tKeyCode = 0x000000FF\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\n\tif (keybinding === 0) {\n\t\treturn null;\n\t}\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\tif (chordPart !== 0) {\n\t\treturn new ChordKeybinding([\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\n\t\t]);\n\t}\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\n\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\n\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\n\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\n\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nexport class SimpleKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyCode = keyCode;\n\t}\n\n\tpublic equals(other: SimpleKeybinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.keyCode === other.keyCode\n\t\t);\n\t}\n\n\tpublic getHashCode(): string {\n\t\tconst ctrl = this.ctrlKey ? '1' : '0';\n\t\tconst shift = this.shiftKey ? '1' : '0';\n\t\tconst alt = this.altKey ? '1' : '0';\n\t\tconst meta = this.metaKey ? '1' : '0';\n\t\treturn `${ctrl}${shift}${alt}${meta}${this.keyCode}`;\n\t}\n\n\tpublic isModifierKey(): boolean {\n\t\treturn (\n\t\t\tthis.keyCode === KeyCode.Unknown\n\t\t\t|| this.keyCode === KeyCode.Ctrl\n\t\t\t|| this.keyCode === KeyCode.Meta\n\t\t\t|| this.keyCode === KeyCode.Alt\n\t\t\t|| this.keyCode === KeyCode.Shift\n\t\t);\n\t}\n\n\tpublic toChord(): ChordKeybinding {\n\t\treturn new ChordKeybinding([this]);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\n\t\t);\n\t}\n}\n\nexport class ChordKeybinding {\n\tpublic readonly parts: SimpleKeybinding[];\n\n\tconstructor(parts: SimpleKeybinding[]) {\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis.parts = parts;\n\t}\n\n\tpublic getHashCode(): string {\n\t\tlet result = '';\n\t\tfor (let i = 0, len = this.parts.length; i < len; i++) {\n\t\t\tif (i !== 0) {\n\t\t\t\tresult += ';';\n\t\t\t}\n\t\t\tresult += this.parts[i].getHashCode();\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic equals(other: ChordKeybinding | null): boolean {\n\t\tif (other === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.parts.length !== other.parts.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.parts.length; i++) {\n\t\t\tif (!this.parts[i].equals(other.parts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport type Keybinding = ChordKeybinding;\n\nexport class ResolvedKeybindingPart {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\n\treadonly keyLabel: string | null;\n\treadonly keyAriaLabel: string | null;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyLabel = kbLabel;\n\t\tthis.keyAriaLabel = kbAriaLabel;\n\t}\n}\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport abstract class ResolvedKeybinding {\n\t/**\n\t * This prints the binding in a format suitable for displaying in the UI.\n\t */\n\tpublic abstract getLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for ARIA.\n\t */\n\tpublic abstract getAriaLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tpublic abstract getElectronAccelerator(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for user settings.\n\t */\n\tpublic abstract getUserSettingsLabel(): string | null;\n\t/**\n\t * Is the user settings label reflecting the label?\n\t */\n\tpublic abstract isWYSIWYG(): boolean;\n\n\t/**\n\t * Is the binding a chord?\n\t */\n\tpublic abstract isChord(): boolean;\n\n\t/**\n\t * Returns the parts that comprise of the keybinding.\n\t * Simple keybindings return one element.\n\t */\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching.\n\t */\n\tpublic abstract getDispatchParts(): (string | null)[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as any as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tconsole.warn(new Error('Registering disposable on object that has already been disposed of').stack);\n\t\t\tt.dispose();\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as any as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\n/**\n * Wrapper class that stores a disposable that is not currently \"owned\" by anyone.\n *\n * Example use cases:\n *\n * - Express that a function/method will take ownership of a disposable parameter.\n * - Express that a function returns a disposable that the caller must explicitly take ownership of.\n */\nexport class UnownedDisposable<T extends IDisposable> extends Disposable {\n\tprivate _hasBeenAcquired = false;\n\tprivate _value?: T;\n\n\tpublic constructor(value: T) {\n\t\tsuper();\n\t\tthis._value = value;\n\t}\n\n\tpublic acquire(): T {\n\t\tif (this._hasBeenAcquired) {\n\t\t\tthrow new Error('This disposable has already been acquired');\n\t\t}\n\t\tthis._hasBeenAcquired = true;\n\t\tconst value = this._value!;\n\t\tthis._value = undefined;\n\t\treturn value;\n\t}\n\n\tpublic dispose() {\n\t\tsuper.dispose();\n\t\tif (!this._hasBeenAcquired) {\n\t\t\tthis._hasBeenAcquired = true;\n\t\t\tthis._value!.dispose();\n\t\t\tthis._value = undefined;\n\t\t}\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (node === Node.Undefined) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: [Listener<T>, T, Promise<any>[]][];\n\n\tasync fireAsync(eventFn: (thenables: Promise<any>[], listener: Function) => T): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\t// put all [listener,event]-pairs into delivery queue\n\t\t// then emit all event. an inner/nested event might be\n\t\t// the driver of this\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = [];\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tconst thenables: Promise<void>[] = [];\n\t\t\tthis._asyncDeliveryQueue.push([e.value, eventFn(thenables, typeof e.value === 'function' ? e.value : e.value[0]), thenables]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.length > 0) {\n\t\t\tconst [listener, event, thenables] = this._asyncDeliveryQueue.shift()!;\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables);\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isNative) {\n\tif (_isMacintosh) {\n\t\t_platform = Platform.Mac;\n\t} else if (_isWindows) {\n\t\t_platform = Platform.Windows;\n\t} else if (_isLinux) {\n\t\t_platform = Platform.Linux;\n\t}\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\nlet _setImmediate: ((callback: (...args: any[]) => void) => number) | null = null;\nexport function setImmediate(callback: (...args: any[]) => void): number {\n\tif (_setImmediate === null) {\n\t\tif (globals.setImmediate) {\n\t\t\t_setImmediate = globals.setImmediate.bind(globals);\n\t\t} else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\t\t_setImmediate = process.nextTick.bind(process);\n\t\t} else {\n\t\t\t_setImmediate = globals.setTimeout.bind(globals);\n\t\t}\n\t}\n\treturn _setImmediate!(callback);\n}\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * The empty string.\n */\nexport const empty = '';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\tconst len1 = a ? a.length : 0;\n\tconst len2 = b ? b.length : 0;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tif (typeof a !== 'string' || typeof b !== 'string') {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, empty);\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, empty);\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nlet _throwOnMissingSchema: boolean = true;\n\n/**\n * @internal\n */\nexport function setUriThrowOnMissingScheme(value: boolean): boolean {\n\tconst old = _throwOnMissingSchema;\n\t_throwOnMissingSchema = value;\n\treturn old;\n}\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme) {\n\t\tif (_strict || _throwOnMissingSchema) {\n\t\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t} else {\n\t\t\tconsole.warn(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t\t}\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (_strict || _throwOnMissingSchema) {\n\t\treturn scheme || _empty;\n\t}\n\tif (!scheme) {\n\t\tconsole.trace('BAD uri lacks scheme, falling back to file-scheme.');\n\t\tscheme = 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tdecodeURIComponent(match[4] || _empty),\n\t\t\tdecodeURIComponent(match[5] || _empty),\n\t\t\tdecodeURIComponent(match[7] || _empty),\n\t\t\tdecodeURIComponent(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { transformErrorForSerialization } from 'vs/base/common/errors';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as types from 'vs/base/common/types';\n\nconst INITIALIZE = '$initialize';\n\nexport interface IWorker extends IDisposable {\n\tgetId(): number;\n\tpostMessage(message: any, transfer: Transferable[]): void;\n}\n\nexport interface IWorkerCallback {\n\t(message: string): void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\ninterface IMessage {\n\tvsWorker: number;\n\treq?: string;\n\tseq?: string;\n}\n\ninterface IRequestMessage extends IMessage {\n\treq: string;\n\tmethod: string;\n\targs: any[];\n}\n\ninterface IReplyMessage extends IMessage {\n\tseq: string;\n\terr: any;\n\tres: any;\n}\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: any, transfer?: ArrayBuffer[]): void;\n\thandleMessage(method: string, args: any[]): Promise<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply; };\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(method: string, args: any[]): Promise<any> {\n\t\tlet req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\treq: req,\n\t\t\t\tmethod: method,\n\t\t\t\targs: args\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic handleMessage(message: IMessage): void {\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tprivate _handleMessage(msg: IMessage): void {\n\t\tif (msg.seq) {\n\t\t\tlet replyMessage = <IReplyMessage>msg;\n\t\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet reply = this._pendingReplies[replyMessage.seq];\n\t\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\t\tif (replyMessage.err) {\n\t\t\t\tlet err = replyMessage.err;\n\t\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\t\terr = new Error();\n\t\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t\t}\n\t\t\t\treply.reject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treply.resolve(replyMessage.res);\n\t\t\treturn;\n\t\t}\n\n\t\tlet requestMessage = <IRequestMessage>msg;\n\t\tlet req = requestMessage.req;\n\t\tlet result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: r,\n\t\t\t\terr: undefined\n\t\t\t});\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: undefined,\n\t\t\t\terr: transformErrorForSerialization(e)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _send(msg: IRequestMessage | IReplyMessage): void {\n\t\tlet transfer: ArrayBuffer[] = [];\n\t\tif (msg.req) {\n\t\t\tconst m = <IRequestMessage>msg;\n\t\t\tfor (let i = 0; i < m.args.length; i++) {\n\t\t\t\tif (m.args[i] instanceof ArrayBuffer) {\n\t\t\t\t\ttransfer.push(m.args[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst m = <IReplyMessage>msg;\n\t\t\tif (m.res instanceof ArrayBuffer) {\n\t\t\t\ttransfer.push(m.res);\n\t\t\t}\n\t\t}\n\t\tthis._handler.sendMessage(msg, transfer);\n\t}\n}\n\nexport interface IWorkerClient<W> {\n\tgetProxyObject(): Promise<W>;\n\tdispose(): void;\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<W extends object, H extends object> extends Disposable implements IWorkerClient<W> {\n\n\tprivate readonly _worker: IWorker;\n\tprivate readonly _onModuleLoaded: Promise<string[]>;\n\tprivate readonly _protocol: SimpleWorkerProtocol;\n\tprivate readonly _lazyProxy: Promise<W>;\n\n\tconstructor(workerFactory: IWorkerFactory, moduleId: string, host: H) {\n\t\tsuper();\n\n\t\tlet lazyProxyReject: ((err: any) => void) | null = null;\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t'vs/base/common/worker/simpleWorker',\n\t\t\t(msg: any) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err: any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tif (lazyProxyReject) {\n\t\t\t\t\tlazyProxyReject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tthis._worker.postMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => {\n\t\t\t\tif (typeof (host as any)[method] !== 'function') {\n\t\t\t\t\treturn Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\treturn Promise.resolve((host as any)[method].apply(host, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration: any = null;\n\t\tif (typeof (<any>self).require !== 'undefined' && typeof (<any>self).require.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = (<any>self).require.getConfig();\n\t\t} else if (typeof (<any>self).requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = (<any>self).requirejs.s.contexts._.config;\n\t\t}\n\n\t\tconst hostMethods = types.getAllMethodNames(host);\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tJSON.parse(JSON.stringify(loaderConfiguration)),\n\t\t\tmoduleId,\n\t\t\thostMethods,\n\t\t]);\n\n\t\t// Create proxy to loaded code\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._request(method, args);\n\t\t};\n\n\t\tthis._lazyProxy = new Promise<W>((resolve, reject) => {\n\t\t\tlazyProxyReject = reject;\n\t\t\tthis._onModuleLoaded.then((availableMethods: string[]) => {\n\t\t\t\tresolve(types.createProxyObject<W>(availableMethods, proxyMethodRequest));\n\t\t\t}, (e) => {\n\t\t\t\treject(e);\n\t\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getProxyObject(): Promise<W> {\n\t\treturn this._lazyProxy;\n\t}\n\n\tprivate _request(method: string, args: any[]): Promise<any> {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._onModuleLoaded.then(() => {\n\t\t\t\tthis._protocol.sendMessage(method, args).then(resolve, reject);\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\nexport interface IRequestHandlerFactory<H> {\n\t(host: H): IRequestHandler;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer<H extends object> {\n\n\tprivate _requestHandlerFactory: IRequestHandlerFactory<H> | null;\n\tprivate _requestHandler: IRequestHandler | null;\n\tprivate _protocol: SimpleWorkerProtocol;\n\n\tconstructor(postMessage: (msg: any, transfer?: Transferable[]) => void, requestHandlerFactory: IRequestHandlerFactory<H> | null) {\n\t\tthis._requestHandlerFactory = requestHandlerFactory;\n\t\tthis._requestHandler = null;\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tpostMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => this._handleMessage(method, args)\n\t\t});\n\t}\n\n\tpublic onmessage(msg: any): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(method: string, args: any[]): Promise<any> {\n\t\tif (method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <any>args[1], <string>args[2], <string[]>args[3]);\n\t\t}\n\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate initialize(workerId: number, loaderConfig: any, moduleId: string, hostMethods: string[]): Promise<string[]> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._protocol.sendMessage(method, args);\n\t\t};\n\n\t\tconst hostProxy = types.createProxyObject<H>(hostMethods, proxyMethodRequest);\n\n\t\tif (this._requestHandlerFactory) {\n\t\t\t// static request handler\n\t\t\tthis._requestHandler = this._requestHandlerFactory(hostProxy);\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._requestHandler));\n\t\t}\n\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\t(<any>self).require.config(loaderConfig);\n\t\t}\n\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\t// Use the global require to be sure to get the global config\n\t\t\t(<any>self).require([moduleId], (module: { create: IRequestHandlerFactory<H> }) => {\n\t\t\t\tthis._requestHandler = module.create(hostProxy);\n\n\t\t\t\tif (!this._requestHandler) {\n\t\t\t\t\treject(new Error(`No RequestHandler!`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(types.getAllMethodNames(this._requestHandler));\n\t\t\t}, reject);\n\t\t});\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(postMessage: (msg: string) => void): SimpleWorkerServer<any> {\n\treturn new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tlet aLineNumber = a.lineNumber | 0;\n\t\tlet bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tlet aColumn = a.column | 0;\n\t\t\tlet bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tlet otherStartLineNumber = b.startLineNumber;\n\t\tlet otherStartColumn = b.startColumn;\n\t\tlet otherEndLineNumber = b.endLineNumber;\n\t\tlet otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\treadonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\treadonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\treadonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\treadonly positionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport const enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic readonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic readonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic readonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic readonly positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Clone this selection.\n\t */\n\tpublic clone(): Selection {\n\t\treturn new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Get the position at `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic getPosition(): Position {\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from one or two positions\n\t */\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Selection {\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel: ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IState } from 'vs/editor/common/modes';\n\nexport class Token {\n\t_tokenBrand: void;\n\n\tpublic readonly offset: number;\n\tpublic readonly type: string;\n\tpublic readonly language: string;\n\n\tconstructor(offset: number, type: string, language: string) {\n\t\tthis.offset = offset | 0;// @perf\n\t\tthis.type = type;\n\t\tthis.language = language;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\n\t}\n}\n\nexport class TokenizationResult {\n\t_tokenizationResultBrand: void;\n\n\tpublic readonly tokens: Token[];\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Token[], endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\nexport class TokenizationResult2 {\n\t_tokenizationResult2Brand: void;\n\n\t/**\n\t * The tokens in binary format. Each token occupies two array indices. For token i:\n\t *  - at offset 2*i => startIndex\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tpublic readonly tokens: Uint32Array;\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Uint32Array, endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Uint8Matrix {\n\n\tprivate readonly _data: Uint8Array;\n\tpublic readonly rows: number;\n\tpublic readonly cols: number;\n\n\tconstructor(rows: number, cols: number, defaultValue: number) {\n\t\tconst data = new Uint8Array(rows * cols);\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\n\t\t\tdata[i] = defaultValue;\n\t\t}\n\n\t\tthis._data = data;\n\t\tthis.rows = rows;\n\t\tthis.cols = cols;\n\t}\n\n\tpublic get(row: number, col: number): number {\n\t\treturn this._data[row * this.cols + col];\n\t}\n\n\tpublic set(row: number, col: number, value: number): void {\n\t\tthis._data[row * this.cols + col] = value;\n\t}\n}\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32Array(arr: number[]): Uint32Array {\n\tconst len = arr.length;\n\tconst r = new Uint32Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tr[i] = toUint32(arr[i]);\n\t}\n\treturn r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/editor/common/core/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprivate _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprivate _map: Map<number, number>;\n\n\tprivate _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tlet defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tlet value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffChange, ISequence, LcsDiff } from 'vs/base/common/diff/diff';\nimport * as strings from 'vs/base/common/strings';\nimport { ICharChange, ILineChange } from 'vs/editor/common/editorCommon';\n\nconst MAXIMUM_RUN_TIME = 5000; // 5 seconds\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\nfunction computeDiff(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: () => boolean, pretty: boolean): IDiffChange[] {\n\tconst diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n\treturn diffAlgo.ComputeDiff(pretty);\n}\n\nclass LineMarkerSequence implements ISequence {\n\n\tprivate readonly _lines: string[];\n\tprivate readonly _startColumns: number[];\n\tprivate readonly _endColumns: number[];\n\n\tconstructor(lines: string[]) {\n\t\tlet startColumns: number[] = [];\n\t\tlet endColumns: number[] = [];\n\t\tfor (let i = 0, length = lines.length; i < length; i++) {\n\t\t\tstartColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n\t\t\tendColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n\t\t}\n\t\tthis._lines = lines;\n\t\tthis._startColumns = startColumns;\n\t\tthis._endColumns = endColumns;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getElementAtIndex(i: number): string {\n\t\treturn this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic getStartColumn(i: number): number {\n\t\treturn this._startColumns[i];\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic getEndColumn(i: number): number {\n\t\treturn this._endColumns[i];\n\t}\n\n\tpublic static _getFirstNonBlankColumn(txt: string, defaultValue: number): number {\n\t\tconst r = strings.firstNonWhitespaceIndex(txt);\n\t\tif (r === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn r + 1;\n\t}\n\n\tpublic static _getLastNonBlankColumn(txt: string, defaultValue: number): number {\n\t\tconst r = strings.lastNonWhitespaceIndex(txt);\n\t\tif (r === -1) {\n\t\t\treturn defaultValue;\n\t\t}\n\t\treturn r + 2;\n\t}\n\n\tpublic getCharSequence(shouldIgnoreTrimWhitespace: boolean, startIndex: number, endIndex: number): CharSequence {\n\t\tlet charCodes: number[] = [];\n\t\tlet lineNumbers: number[] = [];\n\t\tlet columns: number[] = [];\n\t\tlet len = 0;\n\t\tfor (let index = startIndex; index <= endIndex; index++) {\n\t\t\tconst lineContent = this._lines[index];\n\t\t\tconst startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n\t\t\tconst endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n\t\t\tfor (let col = startColumn; col < endColumn; col++) {\n\t\t\t\tcharCodes[len] = lineContent.charCodeAt(col - 1);\n\t\t\t\tlineNumbers[len] = index + 1;\n\t\t\t\tcolumns[len] = col;\n\t\t\t\tlen++;\n\t\t\t}\n\t\t}\n\t\treturn new CharSequence(charCodes, lineNumbers, columns);\n\t}\n}\n\nclass CharSequence implements ISequence {\n\n\tprivate readonly _charCodes: number[];\n\tprivate readonly _lineNumbers: number[];\n\tprivate readonly _columns: number[];\n\n\tconstructor(charCodes: number[], lineNumbers: number[], columns: number[]) {\n\t\tthis._charCodes = charCodes;\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._columns = columns;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._charCodes.length;\n\t}\n\n\tpublic getElementAtIndex(i: number): number {\n\t\treturn this._charCodes[i];\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getStartColumn(i: number): number {\n\t\treturn this._columns[i];\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getEndColumn(i: number): number {\n\t\treturn this._columns[i] + 1;\n\t}\n}\n\nclass CharChange implements ICharChange {\n\n\tpublic originalStartLineNumber: number;\n\tpublic originalStartColumn: number;\n\tpublic originalEndLineNumber: number;\n\tpublic originalEndColumn: number;\n\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedStartColumn: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic modifiedEndColumn: number;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalStartColumn: number,\n\t\toriginalEndLineNumber: number,\n\t\toriginalEndColumn: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedStartColumn: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tmodifiedEndColumn: number\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalStartColumn = originalStartColumn;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.originalEndColumn = originalEndColumn;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedStartColumn = modifiedStartColumn;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.modifiedEndColumn = modifiedEndColumn;\n\t}\n\n\tpublic static createFromDiffChange(diffChange: IDiffChange, originalCharSequence: CharSequence, modifiedCharSequence: CharSequence): CharChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalStartColumn: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet originalEndColumn: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedStartColumn: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet modifiedEndColumn: number;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = 0;\n\t\t\toriginalStartColumn = 0;\n\t\t\toriginalEndLineNumber = 0;\n\t\t\toriginalEndColumn = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\toriginalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = 0;\n\t\t\tmodifiedStartColumn = 0;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t\tmodifiedEndColumn = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t\tmodifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\treturn new CharChange(\n\t\t\toriginalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn,\n\t\t\tmodifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn,\n\t\t);\n\t}\n}\n\nfunction postProcessCharChanges(rawChanges: IDiffChange[]): IDiffChange[] {\n\tif (rawChanges.length <= 1) {\n\t\treturn rawChanges;\n\t}\n\n\tlet result = [rawChanges[0]];\n\tlet prevChange = result[0];\n\n\tfor (let i = 1, len = rawChanges.length; i < len; i++) {\n\t\tconst currChange = rawChanges[i];\n\n\t\tconst originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n\t\tconst modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n\t\t// Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\t\tconst matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n\t\tif (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n\t\t\t// Merge the current change into the previous one\n\t\t\tprevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n\t\t\tprevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n\t\t} else {\n\t\t\t// Add the current change\n\t\t\tresult.push(currChange);\n\t\t\tprevChange = currChange;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass LineChange implements ILineChange {\n\tpublic originalStartLineNumber: number;\n\tpublic originalEndLineNumber: number;\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic charChanges: CharChange[] | undefined;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalEndLineNumber: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tcharChanges: CharChange[] | undefined\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.charChanges = charChanges;\n\t}\n\n\tpublic static createFromDiffResult(shouldIgnoreTrimWhitespace: boolean, diffChange: IDiffChange, originalLineSequence: LineMarkerSequence, modifiedLineSequence: LineMarkerSequence, continueProcessingPredicate: () => boolean, shouldComputeCharChanges: boolean, shouldPostProcessCharChanges: boolean): LineChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n\t\t\toriginalEndLineNumber = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\tif (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n\t\t\tconst originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\tconst modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\n\t\t\tlet rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n\n\t\t\tif (shouldPostProcessCharChanges) {\n\t\t\t\trawChanges = postProcessCharChanges(rawChanges);\n\t\t\t}\n\n\t\t\tcharChanges = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tcharChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n\t\t\t}\n\t\t}\n\n\t\treturn new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n\t}\n}\n\nexport interface IDiffComputerOpts {\n\tshouldComputeCharChanges: boolean;\n\tshouldPostProcessCharChanges: boolean;\n\tshouldIgnoreTrimWhitespace: boolean;\n\tshouldMakePrettyDiff: boolean;\n}\n\nexport class DiffComputer {\n\n\tprivate readonly shouldComputeCharChanges: boolean;\n\tprivate readonly shouldPostProcessCharChanges: boolean;\n\tprivate readonly shouldIgnoreTrimWhitespace: boolean;\n\tprivate readonly shouldMakePrettyDiff: boolean;\n\tprivate readonly maximumRunTimeMs: number;\n\tprivate readonly originalLines: string[];\n\tprivate readonly modifiedLines: string[];\n\tprivate readonly original: LineMarkerSequence;\n\tprivate readonly modified: LineMarkerSequence;\n\n\tprivate computationStartTime: number;\n\n\tconstructor(originalLines: string[], modifiedLines: string[], opts: IDiffComputerOpts) {\n\t\tthis.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n\t\tthis.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n\t\tthis.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n\t\tthis.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n\t\tthis.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n\t\tthis.originalLines = originalLines;\n\t\tthis.modifiedLines = modifiedLines;\n\t\tthis.original = new LineMarkerSequence(originalLines);\n\t\tthis.modified = new LineMarkerSequence(modifiedLines);\n\n\t\tthis.computationStartTime = (new Date()).getTime();\n\t}\n\n\tpublic computeDiff(): ILineChange[] {\n\n\t\tif (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n\t\t\t// empty original => fast path\n\t\t\treturn [{\n\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\toriginalEndLineNumber: 1,\n\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\tmodifiedEndLineNumber: this.modified.getLength(),\n\t\t\t\tcharChanges: [{\n\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t}]\n\t\t\t}];\n\t\t}\n\n\t\tif (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n\t\t\t// empty modified => fast path\n\t\t\treturn [{\n\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\toriginalEndLineNumber: this.original.getLength(),\n\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\tmodifiedEndLineNumber: 1,\n\t\t\t\tcharChanges: [{\n\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t}]\n\t\t\t}];\n\t\t}\n\n\t\tthis.computationStartTime = (new Date()).getTime();\n\n\t\tlet rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n\n\t\t// The diff is always computed with ignoring trim whitespace\n\t\t// This ensures we get the prettiest diff\n\n\t\tif (this.shouldIgnoreTrimWhitespace) {\n\t\t\tlet lineChanges: LineChange[] = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tlineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\t\t\t}\n\t\t\treturn lineChanges;\n\t\t}\n\n\t\t// Need to post-process and introduce changes where the trim whitespace is different\n\t\t// Note that we are looping starting at -1 to also cover the lines before the first change\n\t\tlet result: LineChange[] = [];\n\n\t\tlet originalLineIndex = 0;\n\t\tlet modifiedLineIndex = 0;\n\t\tfor (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n\t\t\tconst nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n\t\t\tconst originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n\t\t\tconst modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n\n\t\t\twhile (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n\t\t\t\tconst originalLine = this.originalLines[originalLineIndex];\n\t\t\t\tconst modifiedLine = this.modifiedLines[modifiedLineIndex];\n\n\t\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\t\t// These lines differ only in trim whitespace\n\n\t\t\t\t\t// Check the leading whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\twhile (originalStartColumn > 1 && modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n\t\t\t\t\t\t\tconst modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalStartColumn--;\n\t\t\t\t\t\t\tmodifiedStartColumn--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalStartColumn > 1 || modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, 1, originalStartColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, 1, modifiedStartColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check the trailing whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\tconst originalMaxColumn = originalLine.length + 1;\n\t\t\t\t\t\tconst modifiedMaxColumn = modifiedLine.length + 1;\n\t\t\t\t\t\twhile (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n\t\t\t\t\t\t\tconst modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalEndColumn++;\n\t\t\t\t\t\t\tmodifiedEndColumn++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, originalEndColumn, originalMaxColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toriginalLineIndex++;\n\t\t\t\tmodifiedLineIndex++;\n\t\t\t}\n\n\t\t\tif (nextChange) {\n\t\t\t\t// Emit the actual change\n\t\t\t\tresult.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\n\t\t\t\toriginalLineIndex += nextChange.originalLength;\n\t\t\t\tmodifiedLineIndex += nextChange.modifiedLength;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _pushTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): void {\n\t\tif (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n\t\t\t// Merged into previous\n\t\t\treturn;\n\t\t}\n\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\t\tif (this.shouldComputeCharChanges) {\n\t\t\tcharChanges = [new CharChange(\n\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t)];\n\t\t}\n\t\tresult.push(new LineChange(\n\t\t\toriginalLineNumber, originalLineNumber,\n\t\t\tmodifiedLineNumber, modifiedLineNumber,\n\t\t\tcharChanges\n\t\t));\n\t}\n\n\tprivate _mergeTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): boolean {\n\t\tconst len = result.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst prevChange = result[len - 1];\n\n\t\tif (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n\t\t\t// Don't merge with inserts/deletes\n\t\t\treturn false;\n\t\t}\n\n\t\tif (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n\t\t\tprevChange.originalEndLineNumber = originalLineNumber;\n\t\t\tprevChange.modifiedEndLineNumber = modifiedLineNumber;\n\t\t\tif (this.shouldComputeCharChanges) {\n\t\t\t\tprevChange.charChanges!.push(new CharChange(\n\t\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t\t));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _continueProcessingPredicate(): boolean {\n\t\tif (this.maximumRunTimeMs === 0) {\n\t\t\treturn true;\n\t\t}\n\t\tconst now = (new Date()).getTime();\n\t\treturn now - this.computationStartTime < this.maximumRunTimeMs;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWordAtPosition } from 'vs/editor/common/model';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif ((wordDefinition as any).unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nfunction getWordAtPosFast(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// find whitespace enclosed text around column and match from there\n\n\tlet pos = column - 1 - textOffset;\n\tlet start = text.lastIndexOf(' ', pos - 1) + 1;\n\n\twordDefinition.lastIndex = start;\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\n\nfunction getWordAtPosSlow(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// matches all words starting at the beginning\n\t// of the input until it finds a match that encloses\n\t// the desired column. slow but correct\n\n\tlet pos = column - 1 - textOffset;\n\twordDefinition.lastIndex = 0;\n\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex > pos) {\n\t\t\t// |nW -> matched only after the pos\n\t\t\treturn null;\n\n\t\t} else if (wordDefinition.lastIndex >= pos) {\n\t\t\t// W|W -> match encloses pos\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\n\t// if `words` can contain whitespace character we have to use the slow variant\n\t// otherwise we use the fast variant of finding a word\n\twordDefinition.lastIndex = 0;\n\tlet match = wordDefinition.exec(text);\n\tif (!match) {\n\t\treturn null;\n\t}\n\t// todo@joh the `match` could already be the (first) word\n\tconst ret = match[0].indexOf(' ') >= 0\n\t\t// did match a word which contains a space character -> use slow word find\n\t\t? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n\t\t// sane word definition -> use fast word find\n\t\t: getWordAtPosFast(column, wordDefinition, text, textOffset);\n\n\t// both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n\t// in an undefined state and to not confuse other users of the wordDefinition\n\t// we reset the lastIndex\n\twordDefinition.lastIndex = 0;\n\n\treturn ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\nimport { Uint8Matrix } from 'vs/editor/common/core/uint';\nimport { ILink } from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n\tInvalid = 0,\n\tStart = 1,\n\tH = 2,\n\tHT = 3,\n\tHTT = 4,\n\tHTTP = 5,\n\tF = 6,\n\tFI = 7,\n\tFIL = 8,\n\tBeforeColon = 9,\n\tAfterColon = 10,\n\tAlmostThere = 11,\n\tEnd = 12,\n\tAccept = 13,\n\tLastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class StateMachine {\n\n\tprivate readonly _states: Uint8Matrix;\n\tprivate readonly _maxCharCode: number;\n\n\tconstructor(edges: Edge[]) {\n\t\tlet maxCharCode = 0;\n\t\tlet maxState = State.Invalid;\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tif (chCode > maxCharCode) {\n\t\t\t\tmaxCharCode = chCode;\n\t\t\t}\n\t\t\tif (from > maxState) {\n\t\t\t\tmaxState = from;\n\t\t\t}\n\t\t\tif (to > maxState) {\n\t\t\t\tmaxState = to;\n\t\t\t}\n\t\t}\n\n\t\tmaxCharCode++;\n\t\tmaxState++;\n\n\t\tlet states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tstates.set(from, chCode, to);\n\t\t}\n\n\t\tthis._states = states;\n\t\tthis._maxCharCode = maxCharCode;\n\t}\n\n\tpublic nextState(currentState: State, chCode: number): State {\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\n\t\t\treturn State.Invalid;\n\t\t}\n\t\treturn this._states.get(currentState, chCode);\n\t}\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n\tif (_stateMachine === null) {\n\t\t_stateMachine = new StateMachine([\n\t\t\t[State.Start, CharCode.h, State.H],\n\t\t\t[State.Start, CharCode.H, State.H],\n\t\t\t[State.Start, CharCode.f, State.F],\n\t\t\t[State.Start, CharCode.F, State.F],\n\n\t\t\t[State.H, CharCode.t, State.HT],\n\t\t\t[State.H, CharCode.T, State.HT],\n\n\t\t\t[State.HT, CharCode.t, State.HTT],\n\t\t\t[State.HT, CharCode.T, State.HTT],\n\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\n\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.F, CharCode.i, State.FI],\n\t\t\t[State.F, CharCode.I, State.FI],\n\n\t\t\t[State.FI, CharCode.l, State.FIL],\n\t\t\t[State.FI, CharCode.L, State.FIL],\n\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\n\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\n\t\t]);\n\t}\n\treturn _stateMachine;\n}\n\n\nconst enum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n\tif (_classifier === null) {\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\treturn _classifier;\n}\n\nexport class LinkComputer {\n\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = classifier.get(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t// Handle links enclosed in parens, square brackets and curlys.\n\t\tif (linkBeginIndex > 0) {\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n\t\t\tif (\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n\t\t\t) {\n\t\t\t\t// Do not end in ) if ( is before the link start\n\t\t\t\t// Do not end in ] if [ is before the link start\n\t\t\t\t// Do not end in } if { is before the link start\n\t\t\t\tlastIncludedCharIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n\t\tconst classifier = getClassifier();\n\n\t\tlet result: ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet linkBeginChCode = 0;\n\t\t\tlet state = State.Start;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\t\t\t\tconst chCode = line.charCodeAt(j);\n\n\t\t\t\tif (state === State.Accept) {\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase CharCode.OpenParen:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseParen:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\t\t\t\t\t\tcase CharCode.SingleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.BackTick:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === State.End) {\n\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\n\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = State.Accept;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\n\t\t\t\t\tif (state === State.Invalid) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = State.Start;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t\tlinkBeginChCode = chCode;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === State.Accept) {\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IInplaceReplaceSupportResult } from 'vs/editor/common/modes';\n\nexport class BasicInplaceReplace {\n\n\tpublic static readonly INSTANCE = new BasicInplaceReplace();\n\n\tpublic navigateValueSet(range1: IRange, text1: string, range2: IRange, text2: string | null, up: boolean): IInplaceReplaceSupportResult | null {\n\n\t\tif (range1 && text1) {\n\t\t\tlet result = this.doNavigateValueSet(text1, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range1,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range2 && text2) {\n\t\t\tlet result = this.doNavigateValueSet(text2, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range2,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doNavigateValueSet(text: string, up: boolean): string | null {\n\t\tlet numberResult = this.numberReplace(text, up);\n\t\tif (numberResult !== null) {\n\t\t\treturn numberResult;\n\t\t}\n\t\treturn this.textReplace(text, up);\n\t}\n\n\tprivate numberReplace(value: string, up: boolean): string | null {\n\t\tlet precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n\t\tlet n1 = Number(value);\n\t\tlet n2 = parseFloat(value);\n\n\t\tif (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\n\t\t\tif (n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n\t\t\t\t//\t\t\t} else if(n1 === 9 && up) {\n\t\t\t\t//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate readonly _defaultValueSet: string[][] = [\n\t\t['true', 'false'],\n\t\t['True', 'False'],\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n\t\t['public', 'protected', 'private'],\n\t];\n\n\tprivate textReplace(value: string, up: boolean): string | null {\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprivate valueSetsReplace(valueSets: string[][], value: string, up: boolean): string | null {\n\t\tlet result: string | null = null;\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate valueSetReplace(valueSet: string[], value: string, up: boolean): string | null {\n\t\tlet idx = valueSet.indexOf(value);\n\t\tif (idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif (idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(\"vs/editor/common/standalone/promise-polyfill/polyfill\", factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\n\n\nexport enum MarkerTag {\n\tUnnecessary = 1,\n\tDeprecated = 2\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8\n}\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\tMeta = 57,\n\tContextMenu = 58,\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\tNumLock = 78,\n\tScrollLock = 79,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\tNUMPAD_0 = 93,\n\tNUMPAD_1 = 94,\n\tNUMPAD_2 = 95,\n\tNUMPAD_3 = 96,\n\tNUMPAD_4 = 97,\n\tNUMPAD_5 = 98,\n\tNUMPAD_6 = 99,\n\tNUMPAD_7 = 100,\n\tNUMPAD_8 = 101,\n\tNUMPAD_9 = 102,\n\tNUMPAD_MULTIPLY = 103,\n\tNUMPAD_ADD = 104,\n\tNUMPAD_SEPARATOR = 105,\n\tNUMPAD_SUBTRACT = 106,\n\tNUMPAD_DECIMAL = 107,\n\tNUMPAD_DIVIDE = 108,\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\tABNT_C1 = 110,\n\tABNT_C2 = 111,\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE = 112\n}\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR = 0,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL = 1\n}\n\nexport enum ScrollbarVisibility {\n\tAuto = 1,\n\tHidden = 2,\n\tVisible = 3\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Position in the minimap to render the decoration.\n */\nexport enum MinimapPosition {\n\tInline = 1\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3\n}\n\nexport enum ScrollType {\n\tSmooth = 0,\n\tImmediate = 1\n}\n\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport enum CursorChangeReason {\n\t/**\n\t * Unknown or not set.\n\t */\n\tNotSet = 0,\n\t/**\n\t * A `model.setValue()` was called.\n\t */\n\tContentFlush = 1,\n\t/**\n\t * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n\t */\n\tRecoverFromMarkers = 2,\n\t/**\n\t * There was an explicit user gesture.\n\t */\n\tExplicit = 3,\n\t/**\n\t * There was a Paste.\n\t */\n\tPaste = 4,\n\t/**\n\t * There was an Undo.\n\t */\n\tUndo = 5,\n\t/**\n\t * There was a Redo.\n\t */\n\tRedo = 6\n}\n\nexport enum RenderMinimap {\n\tNone = 0,\n\tSmall = 1,\n\tLarge = 2,\n\tSmallBlocks = 3,\n\tLargeBlocks = 4\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\nexport enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\n/**\n * A positioning preference for rendering content widgets.\n */\nexport enum ContentWidgetPositionPreference {\n\t/**\n\t * Place the content widget exactly at a position\n\t */\n\tEXACT = 0,\n\t/**\n\t * Place the content widget above a position\n\t */\n\tABOVE = 1,\n\t/**\n\t * Place the content widget below a position\n\t */\n\tBELOW = 2\n}\n\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport enum OverlayWidgetPositionPreference {\n\t/**\n\t * Position the overlay widget in the top right corner\n\t */\n\tTOP_RIGHT_CORNER = 0,\n\t/**\n\t * Position the overlay widget in the bottom right corner\n\t */\n\tBOTTOM_RIGHT_CORNER = 1,\n\t/**\n\t * Position the overlay widget in the top center\n\t */\n\tTOP_CENTER = 2\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN = 0,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA = 1,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN = 2,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS = 3,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS = 4,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE = 5,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT = 6,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY = 7,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE = 8,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET = 9,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER = 10,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR = 11,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET = 12,\n\t/**\n\t * Mouse is outside of the editor.\n\t */\n\tOUTSIDE_EDITOR = 13\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone = 0,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent = 1,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent = 2,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent = 3\n}\n\nexport enum CompletionItemKind {\n\tMethod = 0,\n\tFunction = 1,\n\tConstructor = 2,\n\tField = 3,\n\tVariable = 4,\n\tClass = 5,\n\tStruct = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tEvent = 10,\n\tOperator = 11,\n\tUnit = 12,\n\tValue = 13,\n\tConstant = 14,\n\tEnum = 15,\n\tEnumMember = 16,\n\tKeyword = 17,\n\tText = 18,\n\tColor = 19,\n\tFile = 20,\n\tReference = 21,\n\tCustomcolor = 22,\n\tFolder = 23,\n\tTypeParameter = 24,\n\tSnippet = 25\n}\n\nexport enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 1,\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 4\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText = 0,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead = 1,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite = 2\n}\n\n/**\n * A symbol kind.\n */\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/editor/common/standalone/promise-polyfill/polyfill';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { KeyChord, KeyMod as ConstKeyMod } from 'vs/base/common/keyCodes';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Token } from 'vs/editor/common/core/token';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint32 } from 'vs/editor/common/core/uint';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index: number, remainder: number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic changeValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcnt = toUint32(cnt);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet maxCnt = oldValues.length - startIndex;\n\t\tif (cnt >= maxCnt) {\n\t\t\tcnt = maxCnt;\n\t\t}\n\n\t\tif (cnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - cnt);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getAccumulatedValue(index);\n\t}\n\n\tprivate _getAccumulatedValue(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalValue();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n\nexport class PrefixSumComputerWithCache {\n\n\tprivate readonly _actual: PrefixSumComputer;\n\tprivate _cacheAccumulatedValueStart: number = 0;\n\tprivate _cache: PrefixSumIndexOfResult[] | null = null;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis._actual = new PrefixSumComputer(values);\n\t\tthis._bustCache();\n\t}\n\n\tprivate _bustCache(): void {\n\t\tthis._cacheAccumulatedValueStart = 0;\n\t\tthis._cache = null;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): void {\n\t\tif (this._actual.insertValues(insertIndex, insertValues)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic changeValue(index: number, value: number): void {\n\t\tif (this._actual.changeValue(index, value)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): void {\n\t\tif (this._actual.removeValues(startIndex, cnt)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\treturn this._actual.getTotalValue();\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\treturn this._actual.getAccumulatedValue(index);\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\tif (this._cache !== null) {\n\t\t\tlet cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n\t\t\tif (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n\t\t\t\t// Cache hit!\n\t\t\t\treturn this._cache[cacheIndex];\n\t\t\t}\n\t\t}\n\n\t\t// Cache miss!\n\t\treturn this._actual.getIndexOf(accumulatedValue);\n\t}\n\n\t/**\n\t * Gives a hint that a lot of requests are about to come in for these accumulated values.\n\t */\n\tpublic warmUpCache(accumulatedValueStart: number, accumulatedValueEnd: number): void {\n\t\tlet newCache: PrefixSumIndexOfResult[] = [];\n\t\tfor (let accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n\t\t\tnewCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n\t\t}\n\t\tthis._cache = newCache;\n\t\tthis._cacheAccumulatedValueStart = accumulatedValueStart;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IModelContentChange } from 'vs/editor/common/model/textModelEvents';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n}\n\nexport class MirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\treturn this._lines.join(this._eol);\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { stringDiff } from 'vs/base/common/diff/diff';\nimport { FIN, Iterator, IteratorResult } from 'vs/base/common/iterator';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { DiffComputer } from 'vs/editor/common/diff/diffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { EndOfLineSequence, IWordAtPosition } from 'vs/editor/common/model';\nimport { IModelChangedEvent, MirrorTextModel as BaseMirrorModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/model/wordHelper';\nimport { CompletionItem, CompletionItemKind, CompletionList, IInplaceReplaceSupportResult, ILink, TextEdit } from 'vs/editor/common/modes';\nimport { ILinkComputerTarget, computeLinks } from 'vs/editor/common/modes/linkComputer';\nimport { BasicInplaceReplace } from 'vs/editor/common/modes/supports/inplaceReplaceSupport';\nimport { IDiffComputationResult } from 'vs/editor/common/services/editorWorkerService';\nimport { createMonacoBaseAPI } from 'vs/editor/common/standalone/standaloneBase';\nimport * as types from 'vs/base/common/types';\nimport { EditorWorkerHost } from 'vs/editor/common/services/editorWorkerServiceImpl';\n\nexport interface IMirrorModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext<H = undefined> {\n\t/**\n\t * A proxy to the main thread host object.\n\t */\n\thost: H;\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * @internal\n */\nexport interface IRawModelData {\n\turl: string;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n}\n\n/**\n * @internal\n */\nexport interface ICommonModel extends ILinkComputerTarget, IMirrorModel {\n\turi: URI;\n\tversion: number;\n\teol: string;\n\tgetValue(): string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\tcreateWordIterator(wordDefinition: RegExp): Iterator<string>;\n\tgetWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\ninterface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tlet wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition {\n\t\tconst wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic createWordIterator(wordDefinition: RegExp): Iterator<string> {\n\t\tlet obj: { done: false; value: string; };\n\t\tlet lineNumber = 0;\n\t\tlet lineText: string;\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\t\tlet next = (): IteratorResult<string> => {\n\n\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\twordRangesIdx += 1;\n\t\t\t\tif (!obj) {\n\t\t\t\t\tobj = { done: false, value: value };\n\t\t\t\t} else {\n\t\t\t\t\tobj.value = value;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\n\t\t\t} else if (lineNumber >= this._lines.length) {\n\t\t\t\treturn FIN;\n\n\t\t\t} else {\n\t\t\t\tlineText = this._lines[lineNumber];\n\t\t\t\twordRanges = this._wordenize(lineText, wordDefinition);\n\t\t\t\twordRangesIdx = 0;\n\t\t\t\tlineNumber += 1;\n\t\t\t\treturn next();\n\t\t\t}\n\t\t};\n\t\treturn { next };\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tlet content = this._lines[lineNumber - 1];\n\t\tlet ranges = this._wordenize(content, wordDefinition);\n\t\tlet words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tlet lineEnding = this._eol;\n\t\tlet startLineIndex = range.startLineNumber - 1;\n\t\tlet endLineIndex = range.endLineNumber - 1;\n\t\tlet resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tlet out = this._lineStarts!.getIndexOf(offset);\n\t\tlet lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tlet maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IForeignModuleFactory {\n\t(ctx: IWorkerContext, createData: any): any;\n}\n\ndeclare var require: any;\n\n/**\n * @internal\n */\nexport class EditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate readonly _host: EditorWorkerHost;\n\tprivate _models: { [uri: string]: MirrorModel; };\n\tprivate readonly _foreignModuleFactory: IForeignModuleFactory | null;\n\tprivate _foreignModule: any;\n\n\tconstructor(host: EditorWorkerHost, foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tthis._host = host;\n\t\tthis._models = Object.create(null);\n\t\tthis._foreignModuleFactory = foreignModuleFactory;\n\t\tthis._foreignModule = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel {\n\t\treturn this._models[uri];\n\t}\n\n\tprivate _getModels(): ICommonModel[] {\n\t\tlet all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tlet model = this._models[strURL];\n\t\tmodel.onEvents(e);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic computeDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst originalLines = original.getLinesContent();\n\t\tconst modifiedLines = modified.getLinesContent();\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: true,\n\t\t\tshouldPostProcessCharChanges: true,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true\n\t\t});\n\n\t\tconst changes = diffComputer.computeDiff();\n\t\tlet identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n\t\treturn Promise.resolve({\n\t\t\tidentical: identical,\n\t\t\tchanges: changes\n\t\t});\n\t}\n\n\tprivate _modelsAreIdentical(original: ICommonModel, modified: ICommonModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic computeDirtyDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean): Promise<editorCommon.IChange[] | null> {\n\t\tlet original = this._getModel(originalUrl);\n\t\tlet modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tlet originalLines = original.getLinesContent();\n\t\tlet modifiedLines = modified.getLinesContent();\n\t\tlet diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: false,\n\t\t\tshouldPostProcessCharChanges: false,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true\n\t\t});\n\t\treturn Promise.resolve(diffComputer.computeDiff());\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 100000;\n\n\tpublic computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[]): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(edits);\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = mergeSort(edits, (a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tlet aRng = a.range ? 0 : 1;\n\t\t\tlet bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, false);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn Promise.resolve(result);\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn Promise.resolve(computeLinks(model));\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic textualSuggest(modelUrl: string, position: IPosition, wordDef: string, wordDefFlags: string): Promise<CompletionList | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst seen: Record<string, boolean> = Object.create(null);\n\t\tconst suggestions: CompletionItem[] = [];\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst wordUntil = model.getWordUntilPosition(position, wordDefRegExp);\n\n\t\tconst wordAt = model.getWordAtPosition(position, wordDefRegExp);\n\t\tif (wordAt) {\n\t\t\tseen[model.getValueInRange(wordAt)] = true;\n\t\t}\n\n\t\tfor (\n\t\t\tlet iter = model.createWordIterator(wordDefRegExp), e = iter.next();\n\t\t\t!e.done && suggestions.length <= EditorSimpleWorker._suggestionsLimit;\n\t\t\te = iter.next()\n\t\t) {\n\t\t\tconst word = e.value;\n\t\t\tif (seen[word]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseen[word] = true;\n\t\t\tif (!isNaN(Number(word))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsuggestions.push({\n\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\tlabel: word,\n\t\t\t\tinsertText: word,\n\t\t\t\trange: { startLineNumber: position.lineNumber, startColumn: wordUntil.startColumn, endLineNumber: position.lineNumber, endColumn: wordUntil.endColumn }\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve({ suggestions });\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tcomputeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(Object.create(null));\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tlet words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(result);\n\t}\n\n\t//#endregion\n\n\tpublic navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tlet wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tlet selectionText = model.getValueInRange(range);\n\n\t\tlet wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tlet word = model.getValueInRange(wordRange);\n\t\tlet result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn Promise.resolve(result);\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\tpublic loadForeignModule(moduleId: string, createData: any, foreignHostMethods: string[]): Promise<string[]> {\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._host.fhr(method, args);\n\t\t};\n\n\t\tconst foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n\n\t\tlet ctx: IWorkerContext<any> = {\n\t\t\thost: foreignHost,\n\t\t\tgetMirrorModels: (): IMirrorModel[] => {\n\t\t\t\treturn this._getModels();\n\t\t\t}\n\t\t};\n\n\t\tif (this._foreignModuleFactory) {\n\t\t\tthis._foreignModule = this._foreignModuleFactory(ctx, createData);\n\t\t\t// static foreing module\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._foreignModule));\n\t\t}\n\t\t// ESM-comment-begin\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n\n\t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n\n\t\t\t}, reject);\n\t\t});\n\t\t// ESM-comment-end\n\n\t\t// ESM-uncomment-begin\n\t\t// return Promise.reject(new Error(`Unexpected usage`));\n\t\t// ESM-uncomment-end\n\t}\n\n\t// foreign method request\n\tpublic fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: EditorWorkerHost): IRequestHandler {\n\treturn new EditorSimpleWorker(host, null);\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\tlet MonacoEnvironment = (<any>self).MonacoEnvironment;\n\tlet monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n\n\tif (typeof (<any>self).define !== 'function' || !(<any>self).define.amd) {\n\t\timportScripts(monacoBaseUrl + 'vs/loader.js');\n\t}\n\n\trequire.config({\n\t\tbaseUrl: monacoBaseUrl,\n\t\tcatchError: true\n\t});\n\n\tlet loadCode = function (moduleId: string) {\n\t\trequire([moduleId], function (ws) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tlet messageHandler = ws.create((msg: any) => {\n\t\t\t\t\t(<any>self).postMessage(msg);\n\t\t\t\t}, null);\n\n\t\t\t\tself.onmessage = (e) => messageHandler.onmessage(e.data);\n\t\t\t\twhile (beforeReadyMessages.length > 0) {\n\t\t\t\t\tself.onmessage(beforeReadyMessages.shift()!);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t});\n\t};\n\n\tlet isFirstMessage = true;\n\tlet beforeReadyMessages: MessageEvent[] = [];\n\tself.onmessage = (message) => {\n\t\tif (!isFirstMessage) {\n\t\t\tbeforeReadyMessages.push(message);\n\t\t\treturn;\n\t\t}\n\n\t\tisFirstMessage = false;\n\t\tloadCode(message.data);\n\t};\n})();\n"]}
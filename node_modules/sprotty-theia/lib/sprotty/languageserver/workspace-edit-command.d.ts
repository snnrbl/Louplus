/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { WorkspaceEdit } from "@theia/languages/lib/browser";
import { MonacoWorkspace } from "@theia/monaco/lib/browser/monaco-workspace";
import { Action, Command, CommandExecutionContext, CommandReturn } from "sprotty";
import { LSTheiaDiagramServer } from "./ls-theia-diagram-server";
export declare abstract class AbstractWorkspaceEditCommand extends Command {
    diagramServer: LSTheiaDiagramServer;
    abstract createWorkspaceEdit(context: CommandExecutionContext): WorkspaceEdit;
    readonly workspace: MonacoWorkspace;
    protected workspaceEdit: WorkspaceEdit | undefined;
    execute(context: CommandExecutionContext): CommandReturn;
    undo(context: CommandExecutionContext): CommandReturn;
    redo(context: CommandExecutionContext): CommandReturn;
}
/**
 * This is a client only action, so it does not have to be serializable
 */
export declare class WorkspaceEditAction implements Action {
    readonly workspaceEdit: WorkspaceEdit;
    static readonly KIND: string;
    readonly kind: string;
    constructor(workspaceEdit: WorkspaceEdit);
}
export declare class WorkspaceEditCommand extends AbstractWorkspaceEditCommand {
    readonly action: WorkspaceEditAction;
    static readonly KIND: string;
    constructor(action: WorkspaceEditAction);
    createWorkspaceEdit(context: CommandExecutionContext): WorkspaceEdit;
}
//# sourceMappingURL=workspace-edit-command.d.ts.map
/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { CodeAction, Range } from '@theia/languages/lib/browser';
import { Action, PopupHoverMouseListener, RequestPopupModelAction, SButton, SButtonSchema, SModelElement, SModelElementSchema, SModelRootSchema } from "sprotty";
import { IRootPopupModelProvider } from '../theia-diagram-server';
import { LSTheiaDiagramServerProvider } from './ls-theia-diagram-server';
import { EditDiagramLocker } from './edit-diagram-locker';
export declare class CodeActionProvider {
    diagramServerProvider: LSTheiaDiagramServerProvider;
    getCodeActions(range: Range, codeActionKind: string): Promise<(import("../../../node_modules/vscode-languageserver-types/lib/umd/main").Command | CodeAction)[] | null>;
}
/**
 * A popup-palette based on code actions.
 */
export declare class CodeActionPalettePopupProvider implements IRootPopupModelProvider {
    codeActionProvider: CodeActionProvider;
    editDiagramLocker: EditDiagramLocker;
    getPopupModel(action: RequestPopupModelAction, rootElement: SModelRootSchema): Promise<SModelElementSchema | undefined>;
}
export interface PaletteButtonSchema extends SButtonSchema {
    codeActionKind: string;
    range: Range;
}
export declare class PaletteButton extends SButton {
    codeActionKind: string;
    range: Range;
}
export declare class PaletteMouseListener extends PopupHoverMouseListener {
    codeActionProvider: CodeActionProvider;
    diagramServerProvider: LSTheiaDiagramServerProvider;
    mouseDown(target: SModelElement, event: MouseEvent): (Action | Promise<Action>)[];
    getWorkspaceEditAction(target: PaletteButton): Promise<Action>;
}
//# sourceMappingURL=code-action-palette.d.ts.map
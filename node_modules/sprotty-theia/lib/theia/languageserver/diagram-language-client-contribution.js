"use strict";
/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var browser_1 = require("@theia/languages/lib/browser");
var inversify_1 = require("inversify");
var diagram_manager_1 = require("../diagram-manager");
var DiagramLanguageClientContribution = /** @class */ (function (_super) {
    __extends(DiagramLanguageClientContribution, _super);
    function DiagramLanguageClientContribution(workspace, languages, languageClientFactory, diagramManagerProviders) {
        var _this = _super.call(this, workspace, languages, languageClientFactory) || this;
        _this.diagramManagerProviders = diagramManagerProviders;
        return _this;
    }
    DiagramLanguageClientContribution.prototype.waitForActivation = function (app) {
        return Promise.race([
            _super.prototype.waitForActivation.call(this, app),
            this.waitForOpenDiagrams()
        ]);
    };
    DiagramLanguageClientContribution.prototype.waitForOpenDiagrams = function () {
        return Promise.race(this.diagramManagerProviders.map(function (diagramManagerProvider) {
            return diagramManagerProvider().then(function (diagramManager) {
                return new Promise(function (resolve) {
                    var disposable = diagramManager.onCreated(function (widget) {
                        disposable.dispose();
                        resolve();
                    });
                });
            });
        }));
    };
    DiagramLanguageClientContribution = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(browser_1.Workspace)),
        __param(1, inversify_1.inject(browser_1.Languages)),
        __param(2, inversify_1.inject(browser_1.LanguageClientFactory)),
        __param(3, inversify_1.multiInject(diagram_manager_1.DiagramManagerProvider)),
        __metadata("design:paramtypes", [Object, Object, browser_1.LanguageClientFactory, Array])
    ], DiagramLanguageClientContribution);
    return DiagramLanguageClientContribution;
}(browser_1.BaseLanguageClientContribution));
exports.DiagramLanguageClientContribution = DiagramLanguageClientContribution;
//# sourceMappingURL=diagram-language-client-contribution.js.map
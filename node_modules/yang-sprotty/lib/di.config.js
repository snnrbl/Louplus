"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
var inversify_1 = require("inversify");
var sprotty_1 = require("sprotty");
var views_1 = require("./views");
var yang_models_1 = require("./yang-models");
var model_factory_1 = require("./model-factory");
require("sprotty/css/sprotty.css");
require("sprotty-theia/css/theia-sprotty.css");
var yangDiagramModule = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    rebind(sprotty_1.TYPES.ILogger).to(sprotty_1.ConsoleLogger).inSingletonScope();
    rebind(sprotty_1.TYPES.LogLevel).toConstantValue(sprotty_1.LogLevel.warn);
    rebind(sprotty_1.TYPES.IModelFactory).to(model_factory_1.YangModelFactory).inSingletonScope();
    var context = { bind: bind, unbind: unbind, isBound: isBound, rebind: rebind };
    sprotty_1.configureModelElement(context, 'graph', sprotty_1.SGraph, sprotty_1.SGraphView);
    sprotty_1.configureModelElement(context, 'node:class', yang_models_1.YangNode, views_1.ClassNodeView);
    sprotty_1.configureModelElement(context, 'node:module', yang_models_1.ModuleNode, views_1.ModuleNodeView);
    sprotty_1.configureModelElement(context, 'node:choice', yang_models_1.YangNode, views_1.ChoiceNodeView);
    sprotty_1.configureModelElement(context, 'node:case', yang_models_1.YangNode, views_1.CaseNodeView);
    sprotty_1.configureModelElement(context, 'node:pill', yang_models_1.YangNode, views_1.UsesNodeView);
    sprotty_1.configureModelElement(context, 'node:note', yang_models_1.YangNode, views_1.NoteView);
    sprotty_1.configureModelElement(context, 'label:heading', sprotty_1.SLabel, sprotty_1.SLabelView);
    sprotty_1.configureModelElement(context, 'label:text', sprotty_1.SLabel, sprotty_1.SLabelView);
    sprotty_1.configureModelElement(context, 'ylabel:text', yang_models_1.YangLabel, sprotty_1.SLabelView);
    sprotty_1.configureModelElement(context, 'label:classHeader', sprotty_1.SLabel, sprotty_1.SLabelView);
    sprotty_1.configureModelElement(context, 'tag', yang_models_1.Tag, views_1.TagView);
    sprotty_1.configureModelElement(context, 'label:tag', sprotty_1.SLabel, sprotty_1.SLabelView);
    sprotty_1.configureModelElement(context, 'comp:comp', sprotty_1.SCompartment, sprotty_1.SCompartmentView);
    sprotty_1.configureModelElement(context, 'comp:classHeader', sprotty_1.SCompartment, views_1.HeaderCompartmentView);
    sprotty_1.configureModelElement(context, 'edge:straight', sprotty_1.SEdge, sprotty_1.PolylineEdgeView);
    sprotty_1.configureModelElement(context, 'edge:composition', sprotty_1.SEdge, views_1.CompositionEdgeView);
    sprotty_1.configureModelElement(context, 'edge:dashed', sprotty_1.SEdge, views_1.DashedEdgeView);
    sprotty_1.configureModelElement(context, 'edge:import', sprotty_1.SEdge, views_1.ImportEdgeView);
    sprotty_1.configureModelElement(context, 'edge:uses', sprotty_1.SEdge, views_1.DashedArrowEdgeView);
    sprotty_1.configureModelElement(context, 'edge:augments', sprotty_1.SEdge, views_1.ArrowEdgeView);
    sprotty_1.configureModelElement(context, 'html', sprotty_1.HtmlRoot, sprotty_1.HtmlRootView);
    sprotty_1.configureModelElement(context, 'pre-rendered', sprotty_1.PreRenderedElement, sprotty_1.PreRenderedView);
    sprotty_1.configureModelElement(context, sprotty_1.ExpandButtonHandler.TYPE, sprotty_1.SButton, sprotty_1.ExpandButtonView);
});
function createContainer(widgetId) {
    var container = new inversify_1.Container();
    container.load(sprotty_1.defaultModule, sprotty_1.selectModule, sprotty_1.moveModule, sprotty_1.boundsModule, sprotty_1.undoRedoModule, sprotty_1.viewportModule, sprotty_1.hoverModule, sprotty_1.fadeModule, sprotty_1.exportModule, sprotty_1.expandModule, sprotty_1.openModule, sprotty_1.buttonModule, sprotty_1.modelSourceModule, sprotty_1.decorationModule, sprotty_1.edgeEditModule, sprotty_1.edgeLayoutModule, sprotty_1.labelEditModule, sprotty_1.updateModule, sprotty_1.routingModule, yangDiagramModule);
    sprotty_1.overrideViewerOptions(container, {
        needsClientLayout: true,
        needsServerLayout: true,
        baseDiv: widgetId
    });
    return container;
}
exports.default = createContainer;
//# sourceMappingURL=di.config.js.map